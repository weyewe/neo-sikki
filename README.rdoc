GroupLoan operational posting:

on weekly confirmation:
1. Pay for the weekly payment
2. confirm uncollectibles 
3. run_away allowance, end_of_cycle
	==> what if it is run_away_allowance, but paid in cycle? No need for allowance then. 
	
4. deceased_allowance
5. premature_clearance 
6. extra_revenue from collection rounding_up 

array = [] 
TransactionData.where(
	:is_contra_transaction => true 
).find_each {|x| array <<  x.code }


contra_array = [] 
TransactionData.where(
	:is_contra_transaction => true 
).find_each {|x| contra_array <<  [x.transaction_source_id , x.transaction_source_type, x.id ]   }

even_array = [] 
odd_array = [] 

counter = 0 
contra_array.each do |el|
	counter = counter + 1 
	puts "row: #{counter}"
	total = TransactionData.where( :transaction_source_id => el[0], :transaction_source_type => el[1] ).count 

	odd_array << el  if total%2 != 0  
	even_array << el  if total%2 == 0  
end

el = odd_array.first 
TransactionData.where( :transaction_source_id => el[0], :transaction_source_type => el[1] ).offset(1).order("id DESC").count



odd_array.length
even_array.length

even_array.each do |el|
	TransactionData.where( :transaction_source_id => el[0], :transaction_source_type => el[1] ).each {|td| td.delete_object}
end

odd_array.each do |el|
	TransactionData.where( :transaction_source_id => el[0], :transaction_source_type => el[1] ).offset(1).order("id DESC").each {|td| td.delete_object }
end








# code with contra present: [30, 20, 200, 203, 40, 140, 10]
:group_loan_weekly_collection_voluntary_savings => 30, 
:group_loan_weekly_collection => 20, 
:savings_account => 200,
:locked_savings_account => 203,
:group_loan_premature_clearance_remaining_weeks_payment => 40 ,
:group_loan_deceased_declaration => 140, 
:loan_disbursement => 10,

I want to delete all contra => total contra = 939



NOW! things to do:
1. delete the contra and the associated transaction data

array.all.each do |td_e|
	counter = TransactionData.where(
		:transaction_source_type => td_e.first, 
		:transaction_source_id => td_e.last 
	).count 

	if counter%2 == 0 
		TransactionData.where(
			:transaction_source_type => td_e.first, 
			:transaction_source_id => td_e.last 
		).each {|x| x.delete_object }
	else
		last_td = TransactionData.where(
			:transaction_source_type => td_e.first, 
			:transaction_source_id => td_e.last ,
			:is_contra_transaction => false
		).order("id DESC").first 


		TransactionData.where{
			(transaction_source_type.eq td_e.first ) & 
			(transaction_source_id.eq td_e.last ) & 
			( id.not_eq last_td.id )
		}.each {|x| x.delete_object 

	end
end

2. delete all transaction data from action: weekly_collection_voluntary_savings

3. Add the posting to  the action: group loan weekly collection

